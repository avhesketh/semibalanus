species.scores$species <- rownames(species.scores)
infauna.ordination <- ggplot() +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=site_code),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 2.5, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
theme_bw() +
scale_color_manual(values = col.levels) +
geom_segment(aes(x = NMDS1, y = NMDS2, xend = mean.x, yend = mean.y, col = site_code), data = data.scores, alpha = 0.7) +
geom_text(data=data.scores,aes(x=mean.x, mean.y,label=site_code),size=4, alpha = 0.7, col = "grey20" ) +  # add the site labels
geom_text(aes(x = 0.9, y = 0.6, label = "Stress = 0.1721", cex = 4)) +
labs(color = "Site code", x = "Axis 1", y = "Axis 2") +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
ggsave(filename = "./outputs/S1Fig2.png", infauna.ordination, dpi = 1200)
# associate site codes with palette colours from original map
# get into order from outer->inner coast
site.levels <- as.data.frame(c("WBS","PP","BO","KE","TP","SP","SA","SN","TE","TK")) %>% rename(site_code = 1)
col.conversion <- site.levels %>% left_join(site.palette) %>% select(full.pal)
col.levels <- col.conversion$full.pal
site.levels <- site.levels$site_code
pal.abund <- wes_palette("Darjeeling2", n = 16, type = "continuous") # define palette for abundance figure
H <- diversity(infauna.matrix, "shannon") # compute Shannon diversity of each collection from earlier matrix of data
# calculate richness of each collection
infauna.richness <- infauna.summer %>% select(site_code, replicate)
richness <- with(infauna.richness, specnumber(infauna.matrix))
# join with informative factors for plotting
infauna.diversity <- cbind(cbind(infauna.summer, richness),H) %>%
rename(richness = 56, Shannon_diversity = 57) %>%
mutate(site_code = factor(site_code, levels = site.levels))
infauna.div.summary <- infauna.diversity %>%
group_by(site_code, full.pal) %>%
summarize(mean.rich = mean(richness), se.rich = std.error(richness), # summarize for plotting
mean.H = mean(Shannon_diversity), se.H = std.error(Shannon_diversity)) %>%
mutate(site_code = factor(site_code, levels = site.levels)) # arrange from outer -> inner coast
# get colours matching map palette
color.col <- arrange(infauna.diversity, by_group = site_code) %>% ungroup() %>%
select(full.pal) %>% unique()
col.levels <- color.col$full.pal
infauna.div.summary2 <- infauna.div.summary %>%
mutate(full.pal = factor(full.pal, levels = col.levels))
Fig2A <- ggplot(aes(x = site_code, y = richness, fill = site_code),
data = infauna.diversity) +
geom_boxplot() +
labs(x = "Collection site", y = "Taxonomic richness") +
scale_fill_manual(values = col.levels) +
theme_classic()+
theme(axis.title = element_text(size = 24), axis.text = element_text(size = 20), legend.position = "none")
Fig2B <- ggplot(aes(x = site_code, y = H, fill = site_code), data = infauna.diversity) +
geom_boxplot() +
labs(x = "Collection site", y = "Shannon diversity") +
scale_fill_manual(values = col.levels) +
theme_classic()+
theme(axis.title = element_text(size = 24), axis.text = element_text(size = 20), legend.position = "none")
abund.plot <- read_csv("./clean_data/SBHW_InfaunaCoarseGradient.csv") %>%
mutate(site_code = factor(site_code, levels = site.levels),
coarse_grouping = fct_reorder(coarse_grouping, mean.abund, max))
Fig2C <- ggplot(aes(x = site_code, fill = coarse_grouping, y = mean.abund),
data = abund.plot) +
geom_bar(position = "stack", stat = "identity", col = "grey50", lwd = 0.2, width = 0.8) +
theme_classic() +
labs(y = "Mean abundance", x = "Collection site", fill = "Taxon") +
scale_fill_discrete(type = pal.abund) +
theme(axis.title = element_text(size = 24), axis.text = element_text(size = 20),
legend.title=element_text(size = 24), legend.text = element_text(size = 20))
barplot.abund
infauna.photo <- image_convert(image_read("./raw_data/infauna.jpg"), "png")
Fig2D <- ggdraw() + draw_image(infauna.photo) + theme(plot.margin = margin(0,0,0,0))
Fig2 <- (Fig2A | Fig2B) / (Fig2C | Fig2D) +
plot_annotation(tag_levels = "A") & theme(plot.tag =element_text(size = 26, face = "bold"))
Fig2
abund.plot <- read_csv("./clean_data/SBHW_InfaunaCoarseGradient.csv") %>%
mutate(site_code = factor(site_code, levels = site.levels),
coarse_grouping = fct_reorder(coarse_grouping, mean.abund, max)) %>%
filter((site == "SA") == F)
Fig2C <- ggplot(aes(x = site_code, fill = coarse_grouping, y = mean.abund),
data = abund.plot) +
geom_bar(position = "stack", stat = "identity", col = "grey50", lwd = 0.2, width = 0.8) +
theme_classic() +
labs(y = "Mean abundance", x = "Collection site", fill = "Taxon") +
scale_fill_discrete(type = pal.abund) +
theme(axis.title = element_text(size = 24), axis.text = element_text(size = 20),
legend.title=element_text(size = 24), legend.text = element_text(size = 20))
abund.plot <- read_csv("./clean_data/SBHW_InfaunaCoarseGradient.csv") %>%
mutate(site_code = factor(site_code, levels = site.levels),
coarse_grouping = fct_reorder(coarse_grouping, mean.abund, max)) %>%
filter((site_code == "SA") == F)
Fig2C <- ggplot(aes(x = site_code, fill = coarse_grouping, y = mean.abund),
data = abund.plot) +
geom_bar(position = "stack", stat = "identity", col = "grey50", lwd = 0.2, width = 0.8) +
theme_classic() +
labs(y = "Mean abundance", x = "Collection site", fill = "Taxon") +
scale_fill_discrete(type = pal.abund) +
theme(axis.title = element_text(size = 24), axis.text = element_text(size = 20),
legend.title=element_text(size = 24), legend.text = element_text(size = 20))
Fig2 <- (Fig2A | Fig2B) / (Fig2C | Fig2D) +
plot_annotation(tag_levels = "A") & theme(plot.tag =element_text(size = 26, face = "bold"))
Fig2
ggsave(Fig2, filename = "./outputs/Fig2.png", dpi = 1200, height = 5, width = 7, units = "in", scale = 2.5)
infauna.ordination <- ggplot() +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=site_code),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 2.5, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
scale_color_manual(values = col.levels) +
geom_segment(aes(x = NMDS1, y = NMDS2, xend = mean.x, yend = mean.y, col = site_code), data = data.scores, alpha = 0.7) +
geom_text(data=data.scores,aes(x=mean.x, mean.y,label=site_code),size=4, alpha = 0.7, col = "grey20" ) +  # add the site labels
geom_text(aes(x = 0.9, y = 0.6, label = "Stress = 0.1721", cex = 4)) +
labs(color = "Site code", x = "Axis 1", y = "Axis 2")
ggsave(filename = "./outputs/S1Fig2.png", infauna.ordination, dpi = 1200)
infauna.gradient.mds$stress # print stress of final model (~bad with 2 dimensions)
infauna.ordination <- ggplot() +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=site_code),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 2.5, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
scale_color_manual(values = col.levels) +
geom_segment(aes(x = NMDS1, y = NMDS2, xend = mean.x, yend = mean.y, col = site_code), data = data.scores, alpha = 0.7) +
geom_text(data=data.scores,aes(x=mean.x, mean.y,label=site_code),size=4, alpha = 0.7, col = "grey20" ) +  # add the site labels
geom_text(aes(x = 0.9, y = 0.6, label = "Stress = 0.1656", cex = 4)) +
labs(color = "Site code", x = "Axis 1", y = "Axis 2")
ggsave(filename = "./outputs/S1Fig2.png", infauna.ordination, dpi = 1200)
infauna.ordination <- ggplot() +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=site_code),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 2.5, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
scale_color_manual(values = col.levels) +
geom_segment(aes(x = NMDS1, y = NMDS2, xend = mean.x, yend = mean.y, col = site_code), data = data.scores, alpha = 0.7) +
geom_text(data=data.scores,aes(x=mean.x, mean.y,label=site_code),size=4, alpha = 0.7, col = "grey20" ) +  # add the site labels
geom_text(aes(x = 0.9, y = 0.6, label = "Stress = 0.1656", cex = 4)) +
labs(color = "Site code", x = "Axis 1", y = "Axis 2") +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
ggsave(filename = "./outputs/S1Fig2.png", infauna.ordination, dpi = 1200)
infauna.ordination <- ggplot() +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=site_code),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 2.5, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
scale_color_manual(values = col.levels) +
geom_segment(aes(x = NMDS1, y = NMDS2, xend = mean.x, yend = mean.y, col = site_code), data = data.scores, alpha = 0.7) +
geom_text(data=data.scores,aes(x=mean.x, mean.y,label=site_code),size=4, alpha = 0.7, col = "grey20" ) +  # add the site labels
geom_text(aes(x = 0.9, y = 0.6, label = "Stress = 0.1656"), cex=4) +
labs(color = "Site code", x = "Axis 1", y = "Axis 2") +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
ggsave(filename = "./outputs/S1Fig2.png", infauna.ordination, dpi = 1200)
# PERMANOVA model: just looking at differences in infauna as a function of collection location
adonis(infauna.matrix~site_code, data = infauna.summer)
gradient.beta <- betadisper(dist.gradient, group = infauna.summer$site_code, bias.adjust = T)
anova(gradient.beta)
infauna.shift <- infauna.clean %>% filter(collection_number %in% c(1,12))
#get rid of everything not related to species abundance and convert to matrix for nMDS
infauna.matrix <- infauna.shift %>% ungroup() %>%
select(-collection_number, -site_code, -collection_date, -replicate) %>% as.matrix
# ready to analyze
infauna.shift.mds <- metaMDS(infauna.matrix, k = 3, try = 999, autotransform = T)
infauna.shift.mds$stress # print stress of final model (ok with 2 dimensions, but not excellent)
# ready to analyze
infauna.shift.mds <- metaMDS(infauna.matrix, k = 2, try = 999, autotransform = T)
infauna.shift.mds$stress # print stress of final model (ok with 2 dimensions, but not excellent)
adonis(infauna.matrix~ collection_date, data = infauna.shift)
dist <- vegdist(infauna.matrix, "bray")
infauna.beta <- betadisper(dist, infauna.shift$collection_number, bias.adjust = T)
anova(infauna.beta)
data.scores <- as.data.frame(scores(infauna.shift.mds))
data.scores$treatment <- infauna.shift$collection_number
data.scores <- data.scores %>% group_by(treatment) %>% mutate(mean.x = mean(NMDS1), mean.y = mean(NMDS2)) %>% ungroup() %>% mutate(treatment = case_when(treatment == "1" ~ "PP April 2021",treatment == "2" ~ "SA April 2021", treatment == "10" ~ "SA August 2021", treatment == "12" ~ "PP September 2021"))
species.scores <- as.data.frame(scores(infauna.shift.mds, "species"))
species.scores$species <- rownames(species.scores)
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
df_ell <- data.frame()
for(g in levels(as.factor(data.scores$treatment))){
df_ell <- rbind(df_ell, cbind(as.data.frame(with(data.scores[data.scores$treatment==g,],
veganCovEllipse(cov.wt(cbind(NMDS1,NMDS2),wt=rep(1/length(NMDS1),length(NMDS1)))$cov,center=c(mean(NMDS1),mean(NMDS2)))))
,group=g))
}
df_ell$treatment <- df_ell$group
## create ggplot ordination
infauna.ordination.shift <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
theme_bw() +
labs(color = "Collection", x = "Axis 1", y = "Axis 2") +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
annotate("text", x = -0.5, y = -1.6, label = "Stress = 0.1343", size = 5) +
scale_color_manual(values = c("#528ad9", "#9D7426", "#a9d672", "#CEAA07"))
ggsave(filename = "./outputs/S1Fig9.png", infauna.ordination.shift, dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
## create ggplot ordination
infauna.ordination.shift <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
labs(color = "Collection", x = "Axis 1", y = "Axis 2") +
annotate("text", x = -0.5, y = -1.6, label = "Stress = 0.1343", size = 5) +
scale_color_manual(values = c("#528ad9", "#9D7426", "#a9d672", "#CEAA07"))
ggsave(filename = "./outputs/S1Fig9.png", infauna.ordination.shift, dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
infauna.shift.mds$stress # print stress of final model (ok with 2 dimensions, but not excellent)
## create ggplot ordination
infauna.ordination.shift <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
labs(color = "Collection", x = "Axis 1", y = "Axis 2") +
annotate("text", x = -0.5, y = -0.8, label = "Stress = 0.1403", size = 5) +
scale_color_manual(values = c("#528ad9", "#9D7426", "#a9d672", "#CEAA07"))
ggsave(filename = "./outputs/S1Fig9.png", infauna.ordination.shift, dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
# PERMANOVA
h <- how(nperm = 999)
setBlocks(h) <- with(infauna_factors, block) # set permutation scheme with block design
adonis(infauna_abund ~ treatment, infauna_factors, permutations = h)
data.scores <- as.data.frame(scores(infauna_bray_abund))
data.scores$treatment <- infauna_factors$treatment
data.scores <- data.scores %>% group_by(treatment) %>%
mutate(mean.x = mean(NMDS1), mean.y = mean(NMDS2)) %>% ungroup() %>%
mutate(treatment = case_when(treatment == "1" ~ "Unshaded",treatment == "2" ~ "Shaded"))
species.scores <- as.data.frame(scores(infauna_bray_abund, "species"))
species.scores$species <- rownames(species.scores)
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
df_ell <- data.frame()
for(g in levels(as.factor(data.scores$treatment))){
df_ell <- rbind(df_ell, cbind(as.data.frame(with(data.scores[data.scores$treatment==g,],
veganCovEllipse(cov.wt(cbind(NMDS1,NMDS2),wt=rep(1/length(NMDS1),length(NMDS1)))$cov,center=c(mean(NMDS1),mean(NMDS2)))))
,group=g))
}
df_ell$treatment <- df_ell$group
## create ggplot ordination
infauna.ordination.sa.abund <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
plot_theme +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
annotate("text", x = 0.75, y = -0.4, label = "Stress = 0.1770", size = 5)
infauna.ordination.sa.abund
ggsave(filename = "../outputs/S1Fig8.png", infauna.ordination.sa.abund, dpi = 1200,width = 3.5, height = 2.5, units = "in", scale = 2)
ggsave(filename = "./outputs/S1Fig8.png", infauna.ordination.sa.abund, dpi = 1200,width = 3.5, height = 2.5, units = "in", scale = 2)
# PERMANOVA
h <- how(nperm = 999)
setBlocks(h) <- with(infauna_factors, block) # set permutation scheme with block design
adonis(infauna_matrix ~ treatment, infauna_factors, permutations = h)
infauna_bray$stress # < 0.2, so stick with 2 dimensions
species.repair <- taxa %>%
select(original_code, final_code)
infauna_sahsima <- read_csv("./raw_data/shade/SBHW_SHADE_infauna.csv") %>%
rename(plot_number = plot_id) %>%
pivot_longer(cols = -plot_number, names_to = "original_code", values_to = "abund") %>%
left_join(species.repair) %>% select(-original_code) %>%
group_by(plot_number, final_code) %>% summarize(abund = sum(abund)) %>%
pivot_wider(id_cols = plot_number, names_from = final_code, values_from = abund) %>%
left_join(plot.info) %>% select( -treatment_final_numeric, -shore_level) %>%
rename(treatment = treatment_original_numeric) %>% ungroup() %>% select(-plot_number)
# PERMANOVA model: just looking at differences in infauna as a function of collection location
adonis(infauna.matrix~site_code, data = infauna.summer)
# convert to matrix
infauna.matrix <- as.matrix(infauna.gradient)
# PERMANOVA model: just looking at differences in infauna as a function of collection location
adonis(infauna.matrix~site_code, data = infauna.summer)
#get rid of everything not related to species abundance and convert to matrix for nMDS
infauna.gradient <- infauna.summer %>% ungroup() %>%
select(-collection_number, -site_code, -collection_date, -full.pal, -replicate)
# convert to matrix
infauna.matrix <- as.matrix(infauna.gradient)
# PERMANOVA model: just looking at differences in infauna as a function of collection location
adonis(infauna.matrix~site_code, data = infauna.summer)
dist.gradient <- vegdist(infauna.matrix, method = "bray")
gradient.beta <- betadisper(dist.gradient, group = infauna.summer$site_code, bias.adjust = T)
anova(gradient.beta)
infauna_sahsima <- read_csv("./raw_data/shade/SBHW_SHADE_infauna.csv") %>%
rename(plot_number = plot_id) %>%
pivot_longer(cols = -plot_number, names_to = "original_code", values_to = "abund") %>%
left_join(species.repair) %>% select(-original_code) %>%
group_by(plot_number, final_code) %>% summarize(abund = sum(abund)) %>%
pivot_wider(id_cols = plot_number, names_from = final_code, values_from = abund) %>%
left_join(plot.info) %>% select( -treatment_final_numeric, -shore_level) %>%
rename(treatment = treatment_original_numeric) %>% ungroup() %>% select(-plot_number)
infauna_factors <- infauna_sahsima %>% select(treatment, block) %>%
mutate(treatment = factor(treatment), block = factor(block))
infauna_matrix <- infauna_sahsima %>% select(-treatment, -block) %>% as.matrix()
# Run MDS with autotransform (to account for things with different abundances)
infauna_bray <- metaMDS(infauna_matrix, k=2, try = 999, autotransform = T)
# Will want to re-run MDS with rare species removed
# (everything with < 5 individuals across all samples)
abund.spec <- as.data.frame(colSums(infauna_matrix)) %>%
rename(total = 1) %>% filter(total >= 5) %>% rownames()
infauna_abund <- infauna_matrix[,abund.spec] # removes 10 spp
infauna_bray_abund <- invisible(metaMDS(infauna_abund, k=2, try = 999, autotransform = T))
# PERMANOVA
h <- how(nperm = 999)
setBlocks(h) <- with(infauna_factors, block) # set permutation scheme with block design
adonis(infauna_matrix ~ treatment, infauna_factors, permutations = h)
# PERMDISP
dist <- vegdist(infauna_matrix, "bray")
infauna.beta <- betadisper(dist, infauna_factors$treatment, bias.adjust = T)
anova(infauna.beta)
# PERMANOVA model: just looking at differences in infauna as a function of collection location
adonis(infauna.matrix~site_code, data = infauna.summer)
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
plot_theme +
theme(legend.position = c(0.75, 0.72),
plot.margin=margin(0,150,0,0)) +
annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
pkgs <- c("tidyverse", "lubridate", "car", "vegan", "plotrix", "patchwork",
"lme4", "ggrepel","cowplot", "magick", "ggpubr")
lapply(pkgs, library, character.only = T)
rm(pkgs)
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
# Create NMDS plot of NMDS with all species present
data.scores <- as.data.frame(scores(infauna_bray))
data.scores$treatment <- infauna_factors$treatment
data.scores <- data.scores %>% group_by(treatment) %>%
mutate(mean.x = mean(NMDS1), mean.y = mean(NMDS2)) %>% ungroup() %>%
mutate(treatment = case_when(treatment == "1" ~ "Unshaded",treatment == "2" ~ "Shaded"))
species.scores <- as.data.frame(scores(infauna_bray, "species"))
species.scores$species <- rownames(species.scores)
veganCovEllipse<-function (cov, center = c(0, 0), scale = 1, npoints = 100)
{
theta <- (0:npoints) * 2 * pi/npoints
Circle <- cbind(cos(theta), sin(theta))
t(center + scale * t(Circle %*% chol(cov)))
}
df_ell <- data.frame()
for(g in levels(as.factor(data.scores$treatment))){
df_ell <- rbind(df_ell, cbind(as.data.frame(with(data.scores[data.scores$treatment==g,],
veganCovEllipse(cov.wt(cbind(NMDS1,NMDS2),wt=rep(1/length(NMDS1),length(NMDS1)))$cov,center=c(mean(NMDS1),mean(NMDS2)))))
,group=g))
}
df_ell$treatment <- df_ell$group
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
plot_theme +
theme(legend.position = c(0.75, 0.72),
plot.margin=margin(0,150,0,0)) +
annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
Fig6A
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
plot_theme +
theme(legend.position = "none",
plot.margin=margin(0,150,0,0)) +
#annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
Fig6A
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
plot_theme +
theme(legend.position = "none",
plot.margin=margin(0,150,0,0))
#annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
Fig6A
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "Axis 1", y = "Axis 2") +
plot_theme +
theme(legend.position = "none",
plot.margin=margin(0,0,0,0))
#annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
Fig6A
## create ggplot ordination
Fig6A <- ggplot() +
geom_path(data=df_ell,aes(x = NMDS1,y =NMDS2,colour=treatment)) +
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=treatment),size=3, alpha = 0.8) + # add the point markers
#geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),size = 4, alpha=0.7,
# max.overlaps = 500, box.padding=0.05, min.segment.length = 5) +
coord_equal() +
scale_color_manual(values = c("skyblue4","tomato4")) +
labs(color = "Treatment", x = "NMDS1", y = "NMDS2") +
plot_theme +
theme(legend.position = "none",
plot.margin=margin(0,0,0,0))
#annotate("text", x = 0.75, y = 1, label = "Stress = 0.1739", size = 5)
Fig6A
ggsave(nmds.only, filename = "./outputs/Fig6_simple.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
ggsave(Fig6, filename = "./outputs/Fig6_simple.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
ggsave(Fig6A, filename = "./outputs/Fig6_simple.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 2)
ggsave(Fig6, filename = "./outputs/Fig6.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 1.5)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 1.3)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 3.5, height = 2.5, units = "in", scale = 1.6)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 2.5, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 2.7, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 3, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 2.8, units = "in", scale = 1)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 2.5, units = "in", scale = 1.2)
ggsave(Fig6A, filename = "./outputs/Fig6.png", dpi = 1200, width = 4, height = 2.7, units = "in", scale = 1.2)
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 7, height = 2.5, units = "in",scale = 0.5)
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 7, height = 2.5, units = "in",scale = 1)
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 3.5, height = 1, units = "in" )
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 3.5, height = 1.5, units = "in" )
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 3.5, height = 1.5, units = "in",scale =1.5)
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 4.5, height = 1.5, units = "in",scale =1.5)
ggsave(yyj.panel, filename = "./outputs/S1Fig1_simple.png", dpi = 1200, width = 4, height = 1.5, units = "in",scale =1.5)
ggsave(angles.plot, filename="./outputs/Fig4_ga.png",dpi=1000, height = 2.5, width = 4, units = "in",scale=1.5)
ggsave(angles.plot + theme(legend.position = "none"), filename="./outputs/Fig4_ga.png",dpi=1000, height = 2.5, width = 4, units = "in",scale=1.5)
ggsave(angles.plot + theme(legend.position = "none"), filename="./outputs/Fig4_ga.png",dpi=1000, height = 2.5, width = 3, units = "in",scale=1.5)
ggsave(angles.plot + theme(legend.position = "none"), filename="./outputs/Fig4_ga.png",dpi=1000, height = 2.5, width = 3.5, units = "in",scale=1.5)
citation("emmeans")
source("~/Documents/UBC/R_projects/thesis_chapters/SBHW_2021/scripts/04_mortality.R", echo=TRUE)
mort.plot.mdmax <- ggplot(data = mort.model.df, aes(y = prop_dead*100,
x = mdmax)) +
geom_jitter(size = 2, width = 0.1, alpha = 0.7) +
plot_theme +
labs(y = "Mortality (%)", x = "Mean maximum daily air temperature (ºC)") +
geom_line(data = pred.mdmax,aes(x=x,y=predicted), col = "red") +
geom_ribbon(data=pred.mdmax,aes(x=x, y=predicted,
ymax=conf.high,
ymin=conf.low),
col = NA, alpha = 0.3, fill = "black")
mort.plot.aspect <- ggplot(data = mort.model.df, aes(y = prop_dead*100,
x = degrees_from_azimuth)) +
geom_jitter(size = 2, width = 0.5, alpha = 0.7) +
plot_theme +
labs(y = "Mortality (%)", x = "Degrees from azimuth (º)") +
geom_line(data = pred.aspect,aes(x=x,y=predicted), col = "red") +
geom_ribbon(data=pred.aspect,aes(x=x, y=predicted,
ymax=conf.high,
ymin=conf.low),
col = NA, alpha = 0.3, fill = "black")
Fig3 <- (mort.plot.mdmax / mort.plot.aspect) +
plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 14, face ="bold"))
Fig3
mort.plot.aspect <- ggplot(data = mort.model.df, aes(y = prop_dead*100,
x = degrees_from_azimuth)) +
geom_jitter(size = 2, width = 1, alpha = 0.7) +
plot_theme +
labs(y = "Mortality (%)", x = "Degrees from azimuth (º)") +
geom_line(data = pred.aspect,aes(x=x,y=predicted), col = "red") +
geom_ribbon(data=pred.aspect,aes(x=x, y=predicted,
ymax=conf.high,
ymin=conf.low),
col = NA, alpha = 0.3, fill = "black")
Fig3 <- (mort.plot.mdmax / mort.plot.aspect) +
plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 14, face ="bold"))
Fig3
ggsave(Fig3, filename = "./outputs/Fig3.png",
dpi = 1200, height = 4, width = 3.5, units = "in", scale = 1.5)
