scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)") +
geom_text(aes(y = 48.95, x = -123.2, label = "Strait of Georgia", angle = 340), size = 7, fontface = "italic") +
geom_text(aes(y = 48.28, x = -124, label = "Strait of Juan de Fuca", angle = 350), size = 5, fontface = "italic") +
geom_text(aes(y = 48.8, x = -124.2, label = "Vancouver Island"), angle = 350, size = 6, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info,
direction = "both", size = 7, box.padding = 0.35, min.segment.length = 0) +
theme(axis.ticks.length=unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 20, r = -45), size = 17, color = "grey10")) +
theme(axis.text.x = element_text(vjust = 10, size = 17, color = "grey10")) +
theme(axis.title = element_blank()) +
xlim(c(-123.8, -122.6)) +
ylim(c(48.2, 49.1))
study_sites_south
ggsave(filename = "./outputs/sitemap_south.png", study_sites_south, dpi = 1200)
study_sites_north <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)", pch = "Data collected") +
geom_text(aes(y = 51.55, x = -128, label = "Calvert Island"), size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info, force = 1.5,
direction = "both", box.padding = 0.7, size = 8) +
theme(axis.ticks.length.y =unit(-0.25, "cm")) +
theme(axis.ticks.length.x =unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 15, r = -45), size = 15, colour = "gray10")) +
theme(axis.text.x = element_text(vjust = 10, size = 15, colour = "gray10"))+
theme(axis.title = element_blank()) +
theme(legend.position = "none")
study_sites_north <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)", pch = "Data collected") +
geom_text(aes(y = 51.55, x = -128, label = "Calvert Island"), size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info, force = 1.5,
direction = "both", box.padding = 0.7, size = 8) +
theme(axis.ticks.length.y =unit(-0.25, "cm")) +
theme(axis.ticks.length.x =unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 15, r = -45), size = 15, colour = "gray10")) +
theme(axis.text.x = element_text(vjust = 10, size = 15, colour = "gray10"))+
theme(axis.title = element_blank()) +
theme(legend.position = "none") +
#theme(legend.title = element_text(size = 17), legend.text = element_text(size = 15)) +
ylim(c(51.4, 51.75)) +
xlim(c(-128.35, -127.75))
study_sites_north
base <- get_map(location=c(-128.06,51.57), zoom=10, maptype = "terrain-background", source = "stamen")
study_sites_north <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)", pch = "Data collected") +
geom_text(aes(y = 51.55, x = -128, label = "Calvert Island"), size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info, force = 1.5,
direction = "both", box.padding = 0.7, size = 8) +
theme(axis.ticks.length.y =unit(-0.25, "cm")) +
theme(axis.ticks.length.x =unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 15, r = -45), size = 15, colour = "gray10")) +
theme(axis.text.x = element_text(vjust = 10, size = 15, colour = "gray10"))+
theme(axis.title = element_blank()) +
theme(legend.position = "none") +
#theme(legend.title = element_text(size = 17), legend.text = element_text(size = 15)) +
ylim(c(51.4, 51.75)) +
xlim(c(-128.35, -127.75))
study_sites_north
ggsave(filename = "./outputs/sitemap_north.png", study_sites_north)
study_sites_north <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)", pch = "Data collected") +
geom_text(aes(y = 51.55, x = -128, label = "Calvert Island"), size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info, force = 1.5,
direction = "both", box.padding = 0.7, size = 8) +
theme(axis.ticks.length.y =unit(-0.25, "cm")) +
theme(axis.ticks.length.x =unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 15, r = -45), size = 17, colour = "gray10")) +
theme(axis.text.x = element_text(vjust = 10, size = 17, colour = "gray10"))+
theme(axis.title = element_blank()) +
theme(legend.position = "none") +
#theme(legend.title = element_text(size = 17), legend.text = element_text(size = 15)) +
ylim(c(51.4, 51.75)) +
xlim(c(-128.35, -127.75))
study_sites_north
ggsave(filename = "./outputs/sitemap_north.png", study_sites_north)
# SW Vancouver Island sites
base <- get_map(location=c(lon = -124.5, lat = 48.6) ,zoom=9, maptype = "terrain-background")
study_sites_west <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)") +
geom_text(aes(y = 48.37, x = -124.3, label = "Strait of Juan de Fuca", angle = 340), size = 8, fontface = "italic") +
geom_text(aes(y = 48.8, x = -124.2, label = "Vancouver Island"), angle = 345, size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info,
direction = "both", size = 8, nudge_y = 0.05, nudge_x = 0.2) +
theme(axis.ticks.length=unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 20, r = -45), size = 18, color = "grey10")) +
theme(axis.text.x = element_text(vjust = 10, size = 18, color = "grey10")) +
theme(axis.title = element_blank())
study_sites_west
ggsave(filename = "./outputs/sitemap_west.png", study_sites_west, dpi = 1200)
study_sites_west <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)") +
geom_text(aes(y = 48.37, x = -124.3, label = "Strait of Juan de Fuca", angle = 340), size = 8, fontface = "italic") +
geom_text(aes(y = 48.8, x = -124.2, label = "Vancouver Island"), angle = 345, size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info,
direction = "both", size = 8, nudge_y = 0.05, nudge_x = 0.2) +
theme(axis.ticks.length=unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 20, r = -45), size = 20, color = "grey10")) +
theme(axis.text.x = element_text(vjust = 10, size = 20, color = "grey10")) +
theme(axis.title = element_blank())
study_sites_west
ggsave(filename = "./outputs/sitemap_west.png", study_sites_west, dpi = 1200)
study_sites_west <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17)) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)") +
geom_text(aes(y = 48.37, x = -124.3, label = "Strait of Juan de Fuca", angle = 340), size = 8, fontface = "italic") +
geom_text(aes(y = 48.8, x = -124.2, label = "Vancouver Island"), angle = 345, size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info,
direction = "both", size = 8, nudge_y = 0.05, nudge_x = 0.2) +
theme(axis.ticks.length=unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 20, r = -50), size = 20, color = "grey10")) +
theme(axis.text.x = element_text(vjust = 10, size = 20, color = "grey10")) +
theme(axis.title = element_blank())
study_sites_west
ggsave(filename = "./outputs/sitemap_west.png", study_sites_west, dpi = 1200)
base <- get_map(location=c(-128.06,51.57), zoom=10, maptype = "terrain-background", source = "stamen")
study_sites_north <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = lat, x = long, fill = site_code,
color = site_code, pch = shape), data = site_info, size = 4, stroke = 1.3) +
scale_shape_manual(values = c(2, 0, 14, 16, 17, 15, 8)) +
geom_point(aes(y = lat, x = long, pch = shape), data = site_info, size = 4,
color = "black", alpha = 0.45, stroke = 0.5) +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Dark2"))(17),
guide = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)", pch = "Data collected") +
geom_text(aes(y = 51.55, x = -128, label = "Calvert Island"), size = 8, fontface = "italic") +
geom_text_repel(aes(y = lat, x = long, label = site_code), data = site_info, force = 1.5,
direction = "both", box.padding = 0.7, size = 8) +
theme(axis.ticks.length.y =unit(-0.25, "cm")) +
theme(axis.ticks.length.x =unit(-0.25, "cm")) +
theme(axis.text.y = element_text(margin = margin(l = 15, r = -50), size = 20, colour = "gray10")) +
theme(axis.text.x = element_text(vjust = 10, size = 20, colour = "gray10"))+
theme(axis.title = element_blank()) +
theme(legend.position = "none") +
#theme(legend.title = element_text(size = 17), legend.text = element_text(size = 15)) +
ylim(c(51.4, 51.75)) +
xlim(c(-128.35, -127.75))
study_sites_north
ggsave(filename = "./outputs/sitemap_north.png", study_sites_north)
library(vegan)
library(RColorBrewer)
library(plotrix)
library(glmmTMB)
pkgs(vegan, tidyverse, RColorBrewer, plotrix, glmmTMB)
lapply(pkgs, library, character = T)
pkgs <- c(vegan, tidyverse, RColorBrewer, plotrix, glmmTMB)
lapply(pkgs, library, character = T)
pkgs <- c("vegan", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
collection.info <- read_csv("../raw_data/infauna/SBHW_INFAUNA_collections.csv")
taxonomic.info <- read_csv("../raw_data/SBHW_taxonomic_20220105.csv") %>%  select(original_code, final_code, coarse_grouping)
#get rid of everything not related to species abundance and convert to matrix for nMDS
infauna.matrix <- infauna.summer %>% ungroup() %>%
select(-collection_number, -site_code, -collection_date, -full.pal, -replicate)
dist.inf.all <- vegdist(infauna.matrix, method = "bray")
adonis(infauna.matrix~site_code, data = infauna.summer)
stressplot(comm.infauna)
comm.infauna$stress
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 3, try = 999, autotransform = T)
stressplot(comm.infauna) # plot stress
comm.infauna$stress # print stress of final model (ok, but not excellent)
plot(comm.infauna$stress ~ comm.infauna$ndim)
adonis(infauna.matrix~site_code, data = infauna.summer)
dist.inf.all <- vegdist(infauna.matrix, method = "bray")
disp.inf.all <- betadisper(dist.inf.all, type = "centroid", group = infauna.summer$collection_number)
anova(disp.inf.all)
ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(ord, "sites", cex = 0.7, col = "black")
# load packages
pkgs <- c("vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
# load packages
install.packages("vegan3d")
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
install.packages("rgl")
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
lapply(pkgs, library, character = T)
rm(pkgs)
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
# load relevant data: collection info (associates number of collection with site code and collection date)
collection.info <- read_csv("../raw_data/infauna/SBHW_INFAUNA_collections.csv")
# load taxonomic data: contains information about taxonomic groupings and authorities, species codes, etc.
taxonomic.info <- read_csv("../raw_data/SBHW_taxonomic_20220105.csv") %>%  select(original_code, final_code, coarse_grouping)
# will need to read all the files for all collections ... list all the file names in this directory for reading in
sample.files <- list.files("../raw_data/infauna/community_data/")
# this loop takes a file and loads it in, capturing information about the collection number from the numeric component of the file namem, and joins these in wide format
for (file in 1: length(sample.files)){
file.name = paste("../raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name)
# these data contain taxa at their lowest recorded taxonomic level
infauna.sum <- infauna %>% mutate(replicate = seq(1:nrow(infauna))) %>%
pivot_longer(cols = -replicate, names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code) %>%
group_by(replicate, final_code) %>% summarize(abundance = sum(abundance)) %>%
pivot_wider(names_from = final_code, values_from = abundance) %>% mutate(file_name = sample.files[file])
# these data are for coarse taxonomic groupings
infauna.coarse <- infauna %>%
pivot_longer(cols = 1:ncol(infauna), names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code, -final_code) %>%
group_by(coarse_grouping) %>% summarize(mean.abund = mean(abundance),se.abund = std.error(abundance)) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna.sum
infauna.all.coarse <- infauna.coarse
}
if (file > 1){
infauna.all <- infauna.sum %>% full_join(infauna.all)
infauna.all.coarse <- infauna.coarse %>% full_join(infauna.all.coarse)
}
}
# this loop takes a file and loads it in, capturing information about the collection number from the numeric component of the file namem, and joins these in wide format
for (file in 1: length(sample.files)){
file.name = paste("../raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name)
# these data contain taxa at their lowest recorded taxonomic level
infauna.sum <- infauna %>% mutate(replicate = seq(1:nrow(infauna))) %>%
pivot_longer(cols = -replicate, names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code) %>%
group_by(replicate, final_code) %>% summarize(abundance = sum(abundance)) %>%
pivot_wider(names_from = final_code, values_from = abundance) %>% mutate(file_name = sample.files[file])
# these data are for coarse taxonomic groupings
infauna.coarse <- infauna %>%
pivot_longer(cols = 1:ncol(infauna), names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code, -final_code) %>%
group_by(coarse_grouping) %>% summarize(mean.abund = mean(abundance),se.abund = std.error(abundance)) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna.sum
infauna.all.coarse <- infauna.coarse
}
if (file > 1){
infauna.all <- infauna.sum %>% full_join(infauna.all)
infauna.all.coarse <- infauna.coarse %>% full_join(infauna.all.coarse)
}
}
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
# load relevant data: collection info (associates number of collection with site code and collection date)
collection.info <- read_csv("../raw_data/infauna/SBHW_INFAUNA_collections.csv")
# load taxonomic data: contains information about taxonomic groupings and authorities, species codes, etc.
taxonomic.info <- read_csv("../raw_data/SBHW_taxonomic_20220105.csv") %>%  select(original_code, final_code, coarse_grouping)
View(infauna.all)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info)
View(infauna.clean)
full.pal <- colorRampPalette(brewer.pal(8, "Dark2"))(17)
# join palette information with site information
sites_cols <- read_csv("../raw_data/SBC_siteinformation.csv") %>% select(site_code) %>% arrange(site_code) %>% cbind(full.pal)
# load relevant data: collection info (associates number of collection with site code and collection date)
collection.info <- read_csv("../raw_data/infauna/SBHW_INFAUNA_collections.csv")
# this loop takes a file and loads it in, capturing information about the collection number from the numeric component of the file namem, and joins these in wide format
for (file in 1: length(sample.files)){
file.name = paste("../raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name)
# these data contain taxa at their lowest recorded taxonomic level
infauna.sum <- infauna %>% mutate(replicate = seq(1:nrow(infauna))) %>%
pivot_longer(cols = -replicate, names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code) %>%
group_by(replicate, final_code) %>% summarize(abundance = sum(abundance)) %>%
pivot_wider(names_from = final_code, values_from = abundance) %>% mutate(file_name = sample.files[file])
# these data are for coarse taxonomic groupings
infauna.coarse <- infauna %>%
pivot_longer(cols = 1:ncol(infauna), names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code, -final_code) %>%
group_by(coarse_grouping) %>% summarize(mean.abund = mean(abundance),se.abund = std.error(abundance)) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna.sum
infauna.all.coarse <- infauna.coarse
}
if (file > 1){
infauna.all <- infauna.sum %>% full_join(infauna.all)
infauna.all.coarse <- infauna.coarse %>% full_join(infauna.all.coarse)
}
}
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info)
full.pal <- colorRampPalette(brewer.pal(8, "Dark2"))(17)
# join palette information with site information
sites_cols <- read_csv("../raw_data/SBC_siteinformation.csv") %>% select(site_code) %>% arrange(site_code) %>% cbind(full.pal)
# filter by time: only collections made at the end of summer 2021 (NOT 1 and 2)
infauna.summer <- infauna.clean %>% filter(collection_number %in% 3:12) %>% left_join(sites_cols)
#get rid of everything not related to species abundance and convert to matrix for nMDS
infauna.matrix <- infauna.summer %>% ungroup() %>%
select(-collection_number, -site_code, -collection_date, -full.pal, -replicate)
# convert to matrix
infauna.matrix <- as.matrix(infauna.matrix)
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 3, try = 999, autotransform = T)
stressplot(comm.infauna) # plot stress
comm.infauna$stress # print stress of final model (ok, but not excellent)
adonis(infauna.matrix~site_code, data = infauna.summer)
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(ord, "sites", cex = 0.7, col = "black")
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord,display="species",col="grey30", cex = 0.8, air=1)
text(ord, "centroids", groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
text(ord,"species",col="grey30", cex = 0.8, air=1)
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(ord, "sites", cex = 0.7, col = "black")
text(ord,"species",col="grey30", cex = 0.8, air=1)
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none")
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", angle =15)
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", angle =15, scaling = "symmetric")
points(ord, "sites", cex = 0.7, col = "black")
ord <- ordiplot3d(comm.infauna, type = "none", angle =15, scaling = "symmetric")
points(ord, "sites", cex = 0.7, col = "black")
points(ord, "pointss", cex = 0.7, col = "black")
# 3D ordiplot
ord <- ordiplot3d(comm.infauna, type = "none", angle =15, scaling = "symmetric")
points(ord, "points", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
# 3D ordiplot ... need to keep working on this.
ord <- ordiplot(comm.infauna, type = "none")
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(ord, groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
dev.off()
# 3D ordiplot ... need to keep working on this.
ord <- ordiplot(comm.infauna, type = "none")
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(ord, groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
dev.off()
# load packages
pkgs <- c("vegan", "vegan3d", "tidyverse", "RColorBrewer", "plotrix", "glmmTMB")
lapply(pkgs, library, character = T)
rm(pkgs)
# load relevant data: collection info (associates number of collection with site code and collection date)
collection.info <- read_csv("../raw_data/infauna/SBHW_INFAUNA_collections.csv")
# load taxonomic data: contains information about taxonomic groupings and authorities, species codes, etc.
taxonomic.info <- read_csv("../raw_data/SBHW_taxonomic_20220105.csv") %>%  select(original_code, final_code, coarse_grouping)
# will need to read all the files for all collections ... list all the file names in this directory for reading in
sample.files <- list.files("../raw_data/infauna/community_data/")
# this loop takes a file and loads it in, capturing information about the collection number from the numeric component of the file namem, and joins these in wide format
for (file in 1: length(sample.files)){
file.name = paste("../raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name)
# these data contain taxa at their lowest recorded taxonomic level
infauna.sum <- infauna %>% mutate(replicate = seq(1:nrow(infauna))) %>%
pivot_longer(cols = -replicate, names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code) %>%
group_by(replicate, final_code) %>% summarize(abundance = sum(abundance)) %>%
pivot_wider(names_from = final_code, values_from = abundance) %>% mutate(file_name = sample.files[file])
# these data are for coarse taxonomic groupings
infauna.coarse <- infauna %>%
pivot_longer(cols = 1:ncol(infauna), names_to ="original_code", values_to = "abundance") %>%
left_join(taxonomic.info) %>%
select(-original_code, -final_code) %>%
group_by(coarse_grouping) %>% summarize(mean.abund = mean(abundance),se.abund = std.error(abundance)) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna.sum
infauna.all.coarse <- infauna.coarse
}
if (file > 1){
infauna.all <- infauna.sum %>% full_join(infauna.all)
infauna.all.coarse <- infauna.coarse %>% full_join(infauna.all.coarse)
}
}
## start with the nmds analysis to visualize differences between sites
# this will go in the supplemental, but the PERMANOVA results can go in the main text
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info)
# develop color palette for separate sites to match the Figure 1 map.
full.pal <- colorRampPalette(brewer.pal(8, "Dark2"))(17)
# join palette information with site information
sites_cols <- read_csv("../raw_data/SBC_siteinformation.csv") %>% select(site_code) %>% arrange(site_code) %>% cbind(full.pal)
# filter by time: only collections made at the end of summer 2021 (NOT 1 and 2)
infauna.summer <- infauna.clean %>% filter(collection_number %in% 3:12) %>% left_join(sites_cols)
#get rid of everything not related to species abundance and convert to matrix for nMDS
infauna.matrix <- infauna.summer %>% ungroup() %>%
select(-collection_number, -site_code, -collection_date, -full.pal, -replicate)
# convert to matrix
infauna.matrix <- as.matrix(infauna.matrix)
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 3, try = 999, autotransform = T)
# 3D ordiplot ... need to keep working on this.
ord <- ordiplot(comm.infauna, type = "none")
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(ord, groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
# 3D ordiplot ... need to keep working on this.
ord <- ordiplot(comm.infauna, type = "none")
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(ord, groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
dev.off()
dev.off()
dev.off()
# 3D ordiplot ... need to keep working on this.
ord <- ordiplot(comm.infauna, type = "none")
points(ord, "sites", cex = 0.7, col = "black")
orditorp(ord, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(ord, groups = infauna.summer$site_code,
col = c("#6E9E24", "#B96439", "#B98614", "#D59D08","#8A62AB",
"#C16610", "#96A713", "#A66753", "#666666",
"#1B9E77"), label = TRUE)
dev.off()
