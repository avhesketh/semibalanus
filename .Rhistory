temp.summary <- temp.sep %>% group_by(date, treatment) %>% summarize(mean_temp = mean(temperature_C)) %>% mutate(date = date(date))
ggplot(data = temp.summary, aes(x = date, y = mean_temp, col = treatment)) + geom_line() + scale_color_manual(values = c("skyblue4","skyblue2", "tomato4", "tomato2")) + labs(x = "Date", y = "Temperature (ºC)", color = "Treatment") + theme_bw()
temp.summary2 <- temp.sep %>% group_by(treatment, date) %>% summarize(mdmax_temp = max(temperature_C))
ggplot(data = temp.summary2, aes(x = treatment, y = mdmax_temp, col = treatment)) + geom_boxplot() + scale_color_manual(values = c("skyblue4","skyblue2", "tomato4", "tomato2")) + labs(x = "Date", y = "Maximum Daily Temperature (ºC)", color = "Treatment") + theme_bw()
View(temp.summary2)
temp.model <- lm(mdmax_temp ~ treatment, data = temp.summary2 %>% filter(mdmax_temp < 50))
summary(temp.model)
anova(temp.model)
ggplot(data = temp.summary2 %>% filter(mdmax_temp < 49), aes(x = treatment, y = mdmax_temp, col = treatment)) + geom_boxplot() + scale_color_manual(values = c("skyblue4","skyblue2", "tomato4", "tomato2")) + labs(x = "Date", y = "Maximum Daily Temperature (ºC)", color = "Treatment") + theme_bw()
temp.model <- lm(mdmax_temp ~ treatment, data = temp.summary2 %>% filter(mdmax_temp < 49))
summary(temp.model)
ggplot(data = temp.summary2 %>% filter(mdmax_temp < 50), aes(x = treatment, y = mdmax_temp, col = treatment)) + geom_boxplot() + scale_color_manual(values = c("skyblue4","skyblue2", "tomato4", "tomato2")) + labs(x = "Date", y = "Maximum Daily Temperature (ºC)", color = "Treatment") + theme_bw()
temp.model <- lm(mdmax_temp ~ treatment, data = temp.summary2 %>% filter(mdmax_temp < 50))
summary(temp.model)
anova(temp.model)
library(vegan)
install.packages("vegan")
sample.files <- file.list("./raw_data/infauna/community_data/")
sample.files <- list.files("./raw_data/infauna/community_data/")
for (file in 1: length(sample.files)){
file.name = paste("./raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna
}
if (file > 1){
infauna.all <- rbind(infauna.all, infauna)
}
}
infauna.all <- infauna %>% full_join(infauna_all)
for (file in 1: length(sample.files)){
file.name = paste("./raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna
}
if (file > 1){
infauna.all <- infauna %>% full_join(infauna_all)
}
}
for (file in 1: length(sample.files)){
file.name = paste("./raw_data/infauna/community_data/", sample.files[file], sep = "")
infauna <- read_csv(file.name) %>% mutate(file_name = sample.files[file])
if (file == 1){
infauna.all <- infauna
}
if (file > 1){
infauna.all <- infauna %>% full_join(infauna.all)
}
}
View(infauna.all)
infauna.clean <- infauna.all %>% replace_na(., 0)
infauna.clean <- infauna.all %>% replace_na(0)
infauna.clean <- infauna.all %>% mutate_all(replace_na(., 0)
infauna.clean <- infauna.all %>% mutate_all(replace_na(., 0))
infauna.clean <- infauna.all %>% replace(is.na(.), 0)
View(infauna.clean)
?relocate
collection.info <- read_csv("./raw_data/infauna/community_data/SBC_INFAUNA_collections.csv")
collection.info <- read_csv("./raw_data/infauna/SBC_INFAUNA_collections.csv")
collection.info <- read_csv("./raw_data/infauna/SBC_INFAUNA_collections.csv") %>% select(-collection_date)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c(code, data, collection_number), sep = "_") %>% select(-code, -data) %>% left_join(collection_info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% left_join(collection_info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% left_join(collection.info)
collection.info <- read_csv("./raw_data/infauna/SBC_INFAUNA_collections.csv") %>% select(-collection_date) %>% mutate(collection_number = as.numeric(collection_number))
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% left_join(collection.info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(collection_number)) %>% left_join(collection.info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_")
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv")) %>% left_join(collection.info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info)
collection.info <- read_csv("./raw_data/infauna/SBC_INFAUNA_collections.csv")
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info)
infauna.clean <- infauna.all %>% replace(is.na(.), 0) %>% relocate(file_name, .before = ONBI) %>% separate(file_name, c("code", "data", "collection_number"), sep = "_") %>% select(-code, -data) %>% mutate(collection_number = as.numeric(str_remove_all(collection_number, ".csv"))) %>% left_join(collection.info) %>% relocate(c(site_code, collection_date), .before = ONBI)
#get rid of everything and convert to matrix
infauna.matrix <- infauna.clean %>%
select(-collection_number, -site_code, -collection_date)
# convert to matrix
infauna.matrix <- as.matrix(infauna.matrix)
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 2, try = 400)
install.packages("pair")
library(pair)
library(vegan)
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 2, try = 400)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv")
collection.info <- read_csv("./raw_data/shades/SBC_SHADE_plot_info.csv")
collection.info <- read_csv("./raw_data/shade/SBC_SHADE_plot_info.csv")
View(collection.info)
survey.info <- read_csv("./raw_data/shade/SBC_SHADE_survey_info.csv")
View(survey.info)
View(infauna.shade)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% mutate(survey_id = plot_id)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(survey_id = plot_id)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(survey_id = plot_id) %>% right_join(survey.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(survey_id = plot_id) %>% left_join(survey.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% left_join(collection.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% left_join(collection.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv")
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>%  left_join(collection.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_id = plot_number) %>% left_join(collection.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_number = plot_id) %>% left_join(collection.info)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_number = plot_id, treatment = treatment_original_numeric) %>% left_join(collection.info) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_number = plot_id) %>% left_join(collection.info) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_number = plot_id) %>% left_join(collection.info) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR")) %>% select(-shore_level, -treatment_new_numeric)
infauna.shade <- read_csv("./raw_data/shade/SBC_SHADE_infauna.csv") %>% rename(plot_number = plot_id) %>% left_join(collection.info) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR")) %>% select(-shore_level, -treatment_final_numeric)
#get rid of everything and convert to matrix
infauna.matrix <- infauna.shade %>%
select(-plot_number, -block, -treatment)
# convert to matrix
infauna.matrix <- as.matrix(infauna.matrix)
# ready to analyze
comm.infauna <- metaMDS(infauna.matrix, k = 2, try = 400)
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "treatments", cex = 0.7, col = "black")
points(shade_ord, "sites", cex = 0.7, col = "black")
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "sites", cex = 0.7, col = "black")
plot.new()
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "sites", cex = 0.7, col = "black")
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "sites", cex = 0.7, col = "black", add = T)
points(shade_ord, display = "sites", cex = 0.7, col = "black")
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, display = "sites", cex = 0.7, col = "black")
points(shade_ord, "sites", cex = 0.7, col = "black")
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "sites", cex = 0.7, col = "black")
plot(shade_ord)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
plot(shade_ord)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, display = "sites", cex = 0.7, col = "black")
orditorp(shade_ord,display="species",col="grey30", cex = 0.8, air=1)
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, display = "sites", cex = 0.7, col = "black")
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
shade_ord <- ordiplot(comm.infauna, type = "none", xlim = c(-2,2), ylim = c(-2,2))
points(shade_ord, "sites", cex = 0.7, col = "black")
plot(comm.infauna)
plot(comm.infauna, type = "n")
points(shade_ord, "sites", cex = 0.7, col = "black")
plot(comm.infauna, type = "n")
points(comm.infauna, "sites", cex = 0.7, col = "black")
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
plot(comm.infauna, type = "n")
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
orditorp(comm.infauna,display="species",col="grey30", cex = 0.8, air=1)
plot(comm.infauna)
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna)
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna)
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
orditorp(comm.infauna, display="species",col="grey30", cex = 0.8, air=1)
dev.off()
factors.infauna <-infauna.shade %>% select(treament)
factors.infauna <-infauna.shade %>% select(treatment)
ordiellipse(oct_ord, groups = factors.infauna$treatment,
col = c("blue", "red"), label = TRUE)
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna)
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna, type = "n")
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
orditorp(comm.infauna, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(comm.infauna, groups = factors.infauna$treatment,
col = c("blue", "red"), label = TRUE)
dev.off()
plot(comm.infauna, type = "n")
dev.off()
tiff("community_shade.tiff", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna, type = "n")
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
orditorp(comm.infauna, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(comm.infauna, groups = factors.infauna$treatment,
col = c("blue", "red"), label = TRUE)
dev.off()
factors.infauna <-infauna.shade %>% select(treatment, block)
perm.y1 <- adonis(comm.infauna ~ treatment, strata = block, data = factors.infauna,
perm = 99)
perm.y1 <- adonis(comm.infauna ~ treatment, data = factors.infauna,
perm = 99)
perm.y1 <- adonis(infauna.matrix ~ treatment, data = factors.infauna,
perm = 99)
perm.y1
dist.y1 <- vegdist(infauna.matrix, method = "bray")
disp.y1 <- betadisper(dist.y1, type = "centroid", group = factors.infauna$treatment)
anova(disp.y1)
boxplot(disp.y1)
anova(disp.y1)
boxplot(disp.y1)
anova(disp.y1)
perm.y1
anova(perm.y1)
perm.y1
register_google(key = "AIzaSyDXb9xA_MSl7GzYF5Vcl9sedNZrawnNX1Q")
library(ggsn)
require(ggmap)
install.packages("ggmap")
install.packages("ggsn")
require(ggmap)
library(ggsn)
register_google(key = "AIzaSyDXb9xA_MSl7GzYF5Vcl9sedNZrawnNX1Q")
site_info <- read_csv("./raw_data/SBC_siteinformation.csv") %>% select(site_code, latitude_degrees,
longitude_degrees)
base <- get_map(location=c(-124.5,49.365), zoom=8,
maptype = "terrain-background")
require(ggmap)
base <- get_map(location=c(-124.5,49.365), zoom=8,
maptype = "terrain-background")
base <- get_map(center=c(-124.5,49.365), zoom=8,
maptype = "terrain-background")
?get_map
base <- get_map(location=c(-124.5,49.365), zoom="auto",
maptype = "terrain-background")
base <- get_map(location=c(-124.5,49.365), zoom="auto")
base <- get_map(location=c(-124.5,49.365), zoom="auto")
register_google(key = "AIzaSyDXb9xA_MSl7GzYF5Vcl9sedNZrawnNX1Q")
base <- get_map(location=c(-124.5,49.365), zoom="auto")
base <- get_map(location=c(-124.5,49.365), zoom="auto")
base <- get_map(location=c(-124.5,49.365), zoom="auto", maptype = "terrain-backgroung")
base <- get_map(location=c(-124.5,49.365), zoom="auto", maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black", fill = colour_palette) +
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black", fill = colour_palette)
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black")
study_sites
base <- get_map(location=c(-124.5,49.365), zoom=10, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black")
study_sites
base <- get_map(location=c(-124.5,49.365), zoom=4, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black")
study_sites
site_info <- read_csv("./raw_data/SBC_siteinformation.csv") %>% filter(mortality == 1) %>%
select(site_code, latitude_degrees, longitude_degrees)
base <- get_map(location=c(-124.5,49.365), zoom=6, maptype = "terrain-background")
base <- get_map(location=c(-124.5,49.365), zoom=7, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black")
study_sites
base <- get_map(location=c(-124.5,49.365), zoom=5, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black")
study_sites
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.text = element_blank(), legend.title = element_blank())
study_sites
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none")
study_sites
Quartz()
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none")
quartz()
study_sites
base <- get_map(location=c(-124.5,49.365), zoom=6, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none")
study_sites
base <- get_map(location=c(-124.5,49.365), zoom=6.5, maptype = "terrain-background")
base <- get_map(location=c(-124.5,48.3), zoom=6, maptype = "terrain-background")
base <- get_map(location=c(-124.5,48.3), zoom=7, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none")
study_sites
base <- get_map(location=c(-124.5,48.5), zoom=8, maptype = "terrain-background")
base <- get_map(location=c(-124,48.5), zoom=8, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none")
study_sites
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
base <- get_map(location=c(-123.5,48.5), zoom=9, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
base <- get_map(location=c(-124,48.5), zoom=9, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
base <- get_map(location=c(-123.75,48.5), zoom=9, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = site_info, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
ggsave(filename = "./outputs/sitemap.png", study_sites)
angle_sites <- read_csv("./raw_data/SBC_siteinformation.csv") %>% filter(angles == 1) %>%
select(site_code, latitude_degrees, longitude_degrees)
quartz()
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = angle_sites, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
base <- get_map(location=c(-123,48.5), zoom=9, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = angle_sites, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
base <- get_map(location=c(-123.25,48.7), zoom=9, maptype = "terrain-background")
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = angle_sites, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
ggsave(filename = "./outputs/sitemap_angles.png", angle_sites)
ggsave(filename = "./outputs/sitemap_angles.png", study_sites)
infauna_sites <- read_csv("./raw_data/SBC_siteinformation.csv") %>% filter(infauna == 1) %>%
select(site_code, latitude_degrees, longitude_degrees)
base <- get_map(location=c(-123.75,48.5), zoom=9, maptype = "terrain-background")
quartz()
study_sites <- ggmap(base) +
theme(panel.border = element_rect(fill = NA, colour= "black", size = 1)) +
geom_point(aes(y = latitude_degrees, x = longitude_degrees, fill = site_code), data = infauna_sites, size = 4, alpha = 0.9, pch = 21,
color = "black") +
theme(legend.position = "none") +
labs(x = "Longitude (degrees)", y = "Latitude (degrees)")
study_sites
ggsave(filename = "./outputs/sitemap_infauna.png", study_sites)
temp.files <- list.files("./raw_data/ibutton_temp/")
temp.files <- list.files("./raw_data/ibutton_temp/")
temp.files <- list.files("../raw_data/ibutton_temp/")
png("community_shade.png", units = "in", width = 6, height = 6, res = 450)
plot(comm.infauna, type = "n")
points(comm.infauna, display = "sites", cex = 0.7, col = "black")
orditorp(comm.infauna, display="species",col="grey30", cex = 0.8, air=1)
ordiellipse(comm.infauna, groups = factors.infauna$treatment,
col = c("blue", "red"), label = TRUE)
dev.off()
dev.off()
barnacle.mort <- read_csv("./raw_data/shade/SBC_SHADE_semibalanusmort.csv")
barnacle.mort <- read_csv("../raw_data/shade/SBC_SHADE_semibalanusmort.csv")
```{r, message = F, results = "hide"}
barnacle.mort <- read_csv("../raw_data/shade/SBC_SHADE_semibalanusmort.csv")
barnacle.mort <- read_csv("../raw_data/shade/SBC_SHADE_semibalanusmort.csv") %>% mutate(prop_mort = (number_dead)/(number_live+number_dead) %>% filter(prop_mort != "NaN"))
barnacle.mort <- read_csv("../raw_data/shade/SBC_SHADE_semibalanusmort.csv") %>% mutate(prop_mort = (number_dead)/(number_live+number_dead)) %>% filter(prop_mort != "NaN"))
barnacle.mort <- read_csv("../raw_data/shade/SBC_SHADE_semibalanusmort.csv") %>% mutate(prop_mort = (number_dead)/(number_live+number_dead)) %>% filter(prop_mort != "NaN")
plot.info <- read_csv("../raw_data/shade/SBC_SHADE_plot_info.csv")
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% select(prop_mort, treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% select(prop_mort, treatment_original_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
View(mort.complete)
mort.beds <- mort.complete %>% filter(treatment %in% c("SI","UI"))
shade.mort.model <- lm(prop.mort ~ treatment, data = mort.beds)
shade.mort.model <- lm(prop_mort ~ treatment, data = mort.beds)
plot(shade.mort.model)
summary(shade.mort.model)
Anova(shade.mort.model)
summary(shade.mort.model)
ggplot(mort.beds, aes(x = treatment, y = prop_mort)) + geom_boxplot()
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% fitler(plot_number %in% -c(15,35,36,40))
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% filter(plot_number %in% -c(15,35,36,40))
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% filter(plot_number %in% -c(15,35,36,40)) %>% select(prop_mort, treatment_original_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
mort.beds <- mort.complete %>% filter(treatment %in% c("SI","UI"))
shade.mort.model <- lm(prop_mort ~ treatment, data = mort.beds)
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% filter((plot_number %in% c(15,35,36,40)) == F) %>% select(prop_mort, treatment_original_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
mort.beds <- mort.complete %>% filter(treatment %in% c("SI","UI"))
shade.mort.model <- lm(prop_mort ~ treatment, data = mort.beds)
summary(shade.mort.model)
ggplot(mort.beds, aes(x = treatment, y = prop_mort)) + geom_boxplot()
mort.complete <- barnacle.mort %>% left_join(plot.info) %>% filter((plot_number %in% c(15,35,36,40)) == F) %>% select(prop_mort, treatment_original_numeric, plot_number) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
mort.beds <- mort.complete %>% filter(treatment %in% c("SI","UI"))
visuals <- read_csv("../raw_data/shade/SBC_shade_visual_3_202108.csv")
visuals <- read_csv("../raw_data/shade/SBC_shade_visual_3_202108.csv")
visuals <- read_csv("../raw_data/shade/SBC_shade_visual_3_202108.csv")
H <- diversity(visuals)
richness <- specnumber(visuals)
abund <- rowSums(visuals %>% select(-plot_number))
visuals <- read_csv("../raw_data/shade/SBC_SHADE_visual_3_202108.csv")
H <- diversity(visuals)
abund <- rowSums(visuals %>% select(-plot_number))
taxa <- read_csv("../raw_data/shade/SBC_SHADE_taxonomic_20211004.csv")
View(taxa)
taxa <- read_csv("../raw_data/shade/SBC_SHADE_taxonomic_20211004.csv") %>% select(taxon_code, kingdom)
algae <- taxa %>% filter(kingdom != "Animalia")
algae <- taxa %>% filter(kingdom != "Animalia") %>% select(-kingdom)
algae <- as.vector(algae)
algae
print(algae)
animal <- taxa %>% filter(kingdom == "Animalia") %>% select(-kingdom)
?pivot_longer
visuals.long <- visuals %>% pivot_longer(cols = c(2:length(visuals)), names_to = "taxon_code", values_to = "abund")
visuals.algae <- visuals.long %>% anti_join(algae)
visuals.algae <- visuals.long %>% right_join(algae)
visuals.animals <- visuals.long %>% right_join(animals)
visuals.animals <- visuals.long %>% right_join(animal)
visuals.algae <- visuals.long %>% right_join(algae) %>% pivot_wider(names_from = "taxon_code", values_from = "abund")
View(visuals.algae)
View(algae)
visuals.algae <- visuals.long %>% right_join(algae) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-ULSP) %>% na.omit()
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund")
View(visuals.animals)
View(visuals.long)
View(visuals)
View(visuals.algae)
View(animal)
taxa <- read_csv("../raw_data/shade/SBC_SHADE_taxonomic_20211004.csv") %>% select(taxon_code, kingdom)
animal <- taxa %>% filter(kingdom == "Animalia") %>% select(-kingdom)
visuals.long <- visuals %>% pivot_longer(cols = c(2:length(visuals)), names_to = "taxon_code", values_to = "abund")
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund")
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-GNOR:KATU) %>% na.omit()
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(GNOR:KATU)) %>% na.omit()
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(GNOR:KATU))
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(PHAG:KATU))
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(GNOR:LERU))
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(GNOR:NEVE))
visuals.animals <- visuals.long %>% right_join(animal) %>% pivot_wider(names_from = "taxon_code", values_from = "abund") %>% select(-c(GNOR:NEVE)) %>% na.omit()
H <- diversity(visuals.animals)
richness <- specnumber(visuals.animal)
richness <- specnumber(visuals.animals)
abund <- rowSums(visuals.animals %>% select(-plot_number))
diversity.animals <- cbind(visuals.animals$plot_number, H, richness, abund)
diversity.animals <- cbind(visuals.animals$plot_number, H, richness, abund) %>% full_join(plot.info) %>% select(-plot_number, -treatment_final_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
View(plot.info)
View(diversity.animals)
colnames(diversity.animals = c("plot_number","H","richness","abund"))
colnames(diversity.animals) <- c("plot_number","H","richness","abund")
diversity.animals.trts <- diversity.animals %>% full_join(plot.info) %>% select(-plot_number, -treatment_final_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
diversity.animals <- as.data.frame(diversity.animals)
diversity.animals.trts <- diversity.animals %>% full_join(plot.info) %>% select(-plot_number, -treatment_final_numeric) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
View(diversity.animals.trts)
diversity.animals.trts <- diversity.animals %>% full_join(plot.info) %>% select(-plot_number, -treatment_final_numeric, -shore_level) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
richness <- specnumber(visuals.algae)
H <- diversity(visuals.algae)
total_cover <- rowSums(visuals.algae %>% select(-plot_number))
colnames(diversity.algae) <- c("plot_number","H","richness", "total_cover")
diversity.algae <- cbind(visuals.algae$plot_number, H, richness, total_cover)
colnames(diversity.algae) <- c("plot_number","H","richness", "total_cover")
diversity.algae <- as.data.frame(diversity.algae)
diversity.algae.trts <- diversity.algae %>% full_join(plot.info) %>% select(-plot_number, -treatment_final_numeric, -shore_level) %>% rename(treatment = treatment_original_numeric) %>% mutate(treatment = case_when(treatment == 1 ~ "UI", treatment == 2 ~ "SI", treatment == 3 ~ "UR", treatment == 4 ~ "SR"))
ggplot(diversity.animals.trts, aes(x=treatment, y = richness)) + geom_point()
ggplot(diversity.animals.trts, aes(x=treatment, y = richness)) + geom_boxplot()
ggplot(diversity.animals.trts, aes(x=treatment, y = H)) + geom_boxplot()
ggplot(diversity.animals.trts, aes(x=treatment, y = abund)) + geom_boxplot()
animal.richness <- lm(richness ~ treatment, data = diversity.animals.trts)
summary(animal.richness)
animal.richness <- lmer(richness ~ treatment + (1|block), data = diversity.animals.trts)
animal.diversity <- lm(H ~ treatment, data = diversity.animals.trts)
summary(animal.diversity)
anova(animal.richness)
animal.richness <- lm(richness ~ treatment, data = diversity.animals.trts)
summary(animal.richness)
anova(animal.richness)
Anova(animal.richness)
Anova(animal.diversity)
ggplot(diversity.algae.trts, aes(x=treatment, y = H)) + geom_boxplot()
ggplot(diversity.algae.trts, aes(x=treatment, y = richness)) + geom_boxplot()
ggplot(diversity.algae.trts, aes(x=treatment, y = total_cover)) + geom_boxplot()
